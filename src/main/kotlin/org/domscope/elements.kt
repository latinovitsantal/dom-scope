package org.domscope

import org.w3c.dom.*

fun DomScope.a(ext: Ext<HTMLAnchorElement> = {}) = element("a", ext)
fun DomScope.area(ext: Ext<HTMLAreaElement> = {}) = element("area", ext)
fun DomScope.audio(ext: Ext<HTMLAudioElement> = {}) = element("audio", ext)
fun DomScope.br(ext: Ext<HTMLBRElement> = {}) = element("br", ext)
fun DomScope.button(ext: Ext<HTMLButtonElement> = {}) = element("button", ext)
fun DomScope.canvas(ext: Ext<HTMLCanvasElement> = {}) = element("canvas", ext)
fun DomScope.dl(ext: Ext<HTMLDListElement> = {}) = element("dl", ext)
fun DomScope.datalist(ext: Ext<HTMLDataListElement> = {}) = element("datalist", ext)
fun DomScope.data(ext: Ext<HTMLDataElement> = {}) = element("data", ext)
fun DomScope.details(ext: Ext<HTMLDetailsElement> = {}) = element("details", ext)
fun DomScope.div(ext: Ext<HTMLDivElement> = {}) = element("div", ext)
fun DomScope.embed(ext: Ext<HTMLEmbedElement> = {}) = element("embed", ext)
fun DomScope.fieldset(ext: Ext<HTMLFieldSetElement> = {}) = element("fieldset", ext)
fun DomScope.font(ext: Ext<HTMLFontElement> = {}) = element("font", ext)
fun DomScope.form(ext: Ext<HTMLFormElement> = {}) = element("form", ext)
fun DomScope.hr(ext: Ext<HTMLHRElement> = {}) = element("hr", ext)
fun DomScope.h1(ext: Ext<HTMLHeadingElement> = {}) = element("h1", ext)
fun DomScope.h2(ext: Ext<HTMLHeadingElement> = {}) = element("h2", ext)
fun DomScope.h3(ext: Ext<HTMLHeadingElement> = {}) = element("h3", ext)
fun DomScope.h4(ext: Ext<HTMLHeadingElement> = {}) = element("h4", ext)
fun DomScope.h5(ext: Ext<HTMLHeadingElement> = {}) = element("h5", ext)
fun DomScope.h6(ext: Ext<HTMLHeadingElement> = {}) = element("h6", ext)
fun DomScope.iframe(ext: Ext<HTMLIFrameElement> = {}) = element("iframe", ext)
fun DomScope.img(ext: Ext<HTMLImageElement> = {}) = element("img", ext)
fun DomScope.input(ext: Ext<HTMLInputElement> = {}) = element("input", ext)
fun DomScope.li(ext: Ext<HTMLLIElement> = {}) = element("li", ext)
fun DomScope.label(ext: Ext<HTMLLabelElement> = {}) = element("label", ext)
fun DomScope.legend(ext: Ext<HTMLLegendElement> = {}) = element("legend", ext)
fun DomScope.link(ext: Ext<HTMLLinkElement> = {}) = element("link", ext)
fun DomScope.map(ext: Ext<HTMLMapElement> = {}) = element("map", ext)
fun DomScope.meta(ext: Ext<HTMLMetaElement> = {}) = element("meta", ext)
fun DomScope.meter(ext: Ext<HTMLMeterElement> = {}) = element("meter", ext)
fun DomScope.ins(ext: Ext<HTMLModElement> = {}) = element("ins", ext)
fun DomScope.del(ext: Ext<HTMLModElement> = {}) = element("del", ext)
fun DomScope.ol(ext: Ext<HTMLOListElement> = {}) = element("ol", ext)
fun DomScope.obj(ext: Ext<HTMLObjectElement> = {}) = element("object", ext)
fun DomScope.optgroup(ext: Ext<HTMLOptGroupElement> = {}) = element("optgroup", ext)
fun DomScope.option(ext: Ext<HTMLOptionElement> = {}) = element("option", ext)
fun DomScope.output(ext: Ext<HTMLOutputElement> = {}) = element("output", ext)
fun DomScope.p(ext: Ext<HTMLParagraphElement> = {}) = element("p", ext)
fun DomScope.param(ext: Ext<HTMLParamElement> = {}) = element("param", ext)
fun DomScope.progress(ext: Ext<HTMLProgressElement> = {}) = element("progress", ext)
fun DomScope.blockquote(ext: Ext<HTMLQuoteElement> = {}) = element("blockquote", ext)
fun DomScope.q(ext: Ext<HTMLQuoteElement> = {}) = element("q", ext)
fun DomScope.cite(ext: Ext<HTMLQuoteElement> = {}) = element("cite", ext)
fun DomScope.select(ext: Ext<HTMLSelectElement> = {}) = element("select", ext)
fun DomScope.source(ext: Ext<HTMLSourceElement> = {}) = element("source", ext)
fun DomScope.span(ext: Ext<HTMLSpanElement> = {}) = element("span", ext)
fun DomScope.caption(ext: Ext<HTMLTableCaptionElement> = {}) = element("caption", ext)
fun DomScope.th(ext: Ext<HTMLTableCellElement> = {}) = element("th", ext)
fun DomScope.td(ext: Ext<HTMLTableCellElement> = {}) = element("td", ext)
fun DomScope.col(ext: Ext<HTMLTableColElement> = {}) = element("col", ext)
fun DomScope.colgroup(ext: Ext<HTMLTableColElement> = {}) = element("colgroup", ext)
fun DomScope.tr(ext: Ext<HTMLTableRowElement> = {}) = element("tr", ext)
fun DomScope.table(ext: Ext<HTMLTableElement> = {}) = element("table", ext)
fun DomScope.tfoot(ext: Ext<HTMLTableSectionElement> = {}) = element("tfoot", ext)
fun DomScope.thead(ext: Ext<HTMLTableSectionElement> = {}) = element("thead", ext)
fun DomScope.tbody(ext: Ext<HTMLTableSectionElement> = {}) = element("tbody", ext)
fun DomScope.textarea(ext: Ext<HTMLTextAreaElement> = {}) = element("textarea", ext)
fun DomScope.time(ext: Ext<HTMLTimeElement> = {}) = element("time", ext)
fun DomScope.title(ext: Ext<HTMLTitleElement> = {}) = element("title", ext)
fun DomScope.track(ext: Ext<HTMLTrackElement> = {}) = element("track", ext)
fun DomScope.ul(ext: Ext<HTMLUListElement> = {}) = element("ul", ext)
fun DomScope.video(ext: Ext<HTMLVideoElement> = {}) = element("video", ext)

fun DomScope.a(className: String, ext: Ext<HTMLAnchorElement> = {}) = element("a", className, ext)
fun DomScope.area(className: String, ext: Ext<HTMLAreaElement> = {}) = element("area", className, ext)
fun DomScope.audio(className: String, ext: Ext<HTMLAudioElement> = {}) = element("audio", className, ext)
fun DomScope.br(className: String, ext: Ext<HTMLBRElement> = {}) = element("br", className, ext)
fun DomScope.button(className: String, ext: Ext<HTMLButtonElement> = {}) = element("button", className, ext)
fun DomScope.canvas(className: String, ext: Ext<HTMLCanvasElement> = {}) = element("canvas", className, ext)
fun DomScope.dl(className: String, ext: Ext<HTMLDListElement> = {}) = element("dl", className, ext)
fun DomScope.datalist(className: String, ext: Ext<HTMLDataListElement> = {}) = element("datalist", className, ext)
fun DomScope.data(className: String, ext: Ext<HTMLDataElement> = {}) = element("data", className, ext)
fun DomScope.details(className: String, ext: Ext<HTMLDetailsElement> = {}) = element("details", className, ext)
fun DomScope.div(className: String, ext: Ext<HTMLDivElement> = {}) = element("div", className, ext)
fun DomScope.embed(className: String, ext: Ext<HTMLEmbedElement> = {}) = element("embed", className, ext)
fun DomScope.fieldset(className: String, ext: Ext<HTMLFieldSetElement> = {}) = element("fieldset", className, ext)
fun DomScope.font(className: String, ext: Ext<HTMLFontElement> = {}) = element("font", className, ext)
fun DomScope.form(className: String, ext: Ext<HTMLFormElement> = {}) = element("form", className, ext)
fun DomScope.hr(className: String, ext: Ext<HTMLHRElement> = {}) = element("hr", className, ext)
fun DomScope.h1(className: String, ext: Ext<HTMLHeadingElement> = {}) = element("h1", className, ext)
fun DomScope.h2(className: String, ext: Ext<HTMLHeadingElement> = {}) = element("h2", className, ext)
fun DomScope.h3(className: String, ext: Ext<HTMLHeadingElement> = {}) = element("h3", className, ext)
fun DomScope.h4(className: String, ext: Ext<HTMLHeadingElement> = {}) = element("h4", className, ext)
fun DomScope.h5(className: String, ext: Ext<HTMLHeadingElement> = {}) = element("h5", className, ext)
fun DomScope.h6(className: String, ext: Ext<HTMLHeadingElement> = {}) = element("h6", className, ext)
fun DomScope.iframe(className: String, ext: Ext<HTMLIFrameElement> = {}) = element("iframe", className, ext)
fun DomScope.img(className: String, ext: Ext<HTMLImageElement> = {}) = element("img", className, ext)
fun DomScope.input(className: String, ext: Ext<HTMLInputElement> = {}) = element("input", className, ext)
fun DomScope.li(className: String, ext: Ext<HTMLLIElement> = {}) = element("li", className, ext)
fun DomScope.label(className: String, ext: Ext<HTMLLabelElement> = {}) = element("label", className, ext)
fun DomScope.legend(className: String, ext: Ext<HTMLLegendElement> = {}) = element("legend", className, ext)
fun DomScope.link(className: String, ext: Ext<HTMLLinkElement> = {}) = element("link", className, ext)
fun DomScope.map(className: String, ext: Ext<HTMLMapElement> = {}) = element("map", className, ext)
fun DomScope.meta(className: String, ext: Ext<HTMLMetaElement> = {}) = element("meta", className, ext)
fun DomScope.meter(className: String, ext: Ext<HTMLMeterElement> = {}) = element("meter", className, ext)
fun DomScope.ins(className: String, ext: Ext<HTMLModElement> = {}) = element("ins", className, ext)
fun DomScope.del(className: String, ext: Ext<HTMLModElement> = {}) = element("del", className, ext)
fun DomScope.ol(className: String, ext: Ext<HTMLOListElement> = {}) = element("ol", className, ext)
fun DomScope.obj(className: String, ext: Ext<HTMLObjectElement> = {}) = element("object", className, ext)
fun DomScope.optgroup(className: String, ext: Ext<HTMLOptGroupElement> = {}) = element("optgroup", className, ext)
fun DomScope.option(className: String, ext: Ext<HTMLOptionElement> = {}) = element("option", className, ext)
fun DomScope.output(className: String, ext: Ext<HTMLOutputElement> = {}) = element("output", className, ext)
fun DomScope.p(className: String, ext: Ext<HTMLParagraphElement> = {}) = element("p", className, ext)
fun DomScope.param(className: String, ext: Ext<HTMLParamElement> = {}) = element("param", className, ext)
fun DomScope.progress(className: String, ext: Ext<HTMLProgressElement> = {}) = element("progress", className, ext)
fun DomScope.blockquote(className: String, ext: Ext<HTMLQuoteElement> = {}) = element("blockquote", className, ext)
fun DomScope.q(className: String, ext: Ext<HTMLQuoteElement> = {}) = element("q", className, ext)
fun DomScope.cite(className: String, ext: Ext<HTMLQuoteElement> = {}) = element("cite", className, ext)
fun DomScope.select(className: String, ext: Ext<HTMLSelectElement> = {}) = element("select", className, ext)
fun DomScope.source(className: String, ext: Ext<HTMLSourceElement> = {}) = element("source", className, ext)
fun DomScope.span(className: String, ext: Ext<HTMLSpanElement> = {}) = element("span", className, ext)
fun DomScope.caption(className: String, ext: Ext<HTMLTableCaptionElement> = {}) = element("caption", className, ext)
fun DomScope.th(className: String, ext: Ext<HTMLTableCellElement> = {}) = element("th", className, ext)
fun DomScope.td(className: String, ext: Ext<HTMLTableCellElement> = {}) = element("td", className, ext)
fun DomScope.col(className: String, ext: Ext<HTMLTableColElement> = {}) = element("col", className, ext)
fun DomScope.colgroup(className: String, ext: Ext<HTMLTableColElement> = {}) = element("colgroup", className, ext)
fun DomScope.tr(className: String, ext: Ext<HTMLTableRowElement> = {}) = element("tr", className, ext)
fun DomScope.table(className: String, ext: Ext<HTMLTableElement> = {}) = element("table", className, ext)
fun DomScope.tfoot(className: String, ext: Ext<HTMLTableSectionElement> = {}) = element("tfoot", className, ext)
fun DomScope.thead(className: String, ext: Ext<HTMLTableSectionElement> = {}) = element("thead", className, ext)
fun DomScope.tbody(className: String, ext: Ext<HTMLTableSectionElement> = {}) = element("tbody", className, ext)
fun DomScope.textarea(className: String, ext: Ext<HTMLTextAreaElement> = {}) = element("textarea", className, ext)
fun DomScope.time(className: String, ext: Ext<HTMLTimeElement> = {}) = element("time", className, ext)
fun DomScope.title(className: String, ext: Ext<HTMLTitleElement> = {}) = element("title", className, ext)
fun DomScope.track(className: String, ext: Ext<HTMLTrackElement> = {}) = element("track", className, ext)
fun DomScope.ul(className: String, ext: Ext<HTMLUListElement> = {}) = element("ul", className, ext)
fun DomScope.video(className: String, ext: Ext<HTMLVideoElement> = {}) = element("video", className, ext)



fun DomScope.a(deps: Deps, ext: Ext<HTMLAnchorElement> = {}) = element("a", deps, ext)
fun DomScope.area(deps: Deps, ext: Ext<HTMLAreaElement> = {}) = element("area", deps, ext)
fun DomScope.audio(deps: Deps, ext: Ext<HTMLAudioElement> = {}) = element("audio", deps, ext)
fun DomScope.br(deps: Deps, ext: Ext<HTMLBRElement> = {}) = element("br", deps, ext)
fun DomScope.button(deps: Deps, ext: Ext<HTMLButtonElement> = {}) = element("button", deps, ext)
fun DomScope.canvas(deps: Deps, ext: Ext<HTMLCanvasElement> = {}) = element("canvas", deps, ext)
fun DomScope.dl(deps: Deps, ext: Ext<HTMLDListElement> = {}) = element("dl", deps, ext)
fun DomScope.datalist(deps: Deps, ext: Ext<HTMLDataListElement> = {}) = element("datalist", deps, ext)
fun DomScope.data(deps: Deps, ext: Ext<HTMLDataElement> = {}) = element("data", deps, ext)
fun DomScope.details(deps: Deps, ext: Ext<HTMLDetailsElement> = {}) = element("details", deps, ext)
fun DomScope.div(deps: Deps, ext: Ext<HTMLDivElement> = {}) = element("div", deps, ext)
fun DomScope.embed(deps: Deps, ext: Ext<HTMLEmbedElement> = {}) = element("embed", deps, ext)
fun DomScope.fieldset(deps: Deps, ext: Ext<HTMLFieldSetElement> = {}) = element("fieldset", deps, ext)
fun DomScope.font(deps: Deps, ext: Ext<HTMLFontElement> = {}) = element("font", deps, ext)
fun DomScope.form(deps: Deps, ext: Ext<HTMLFormElement> = {}) = element("form", deps, ext)
fun DomScope.hr(deps: Deps, ext: Ext<HTMLHRElement> = {}) = element("hr", deps, ext)
fun DomScope.h1(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h1", deps, ext)
fun DomScope.h2(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h2", deps, ext)
fun DomScope.h3(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h3", deps, ext)
fun DomScope.h4(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h4", deps, ext)
fun DomScope.h5(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h5", deps, ext)
fun DomScope.h6(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h6", deps, ext)
fun DomScope.iframe(deps: Deps, ext: Ext<HTMLIFrameElement> = {}) = element("iframe", deps, ext)
fun DomScope.img(deps: Deps, ext: Ext<HTMLImageElement> = {}) = element("img", deps, ext)
fun DomScope.input(deps: Deps, ext: Ext<HTMLInputElement> = {}) = element("input", deps, ext)
fun DomScope.li(deps: Deps, ext: Ext<HTMLLIElement> = {}) = element("li", deps, ext)
fun DomScope.label(deps: Deps, ext: Ext<HTMLLabelElement> = {}) = element("label", deps, ext)
fun DomScope.legend(deps: Deps, ext: Ext<HTMLLegendElement> = {}) = element("legend", deps, ext)
fun DomScope.link(deps: Deps, ext: Ext<HTMLLinkElement> = {}) = element("link", deps, ext)
fun DomScope.map(deps: Deps, ext: Ext<HTMLMapElement> = {}) = element("map", deps, ext)
fun DomScope.meta(deps: Deps, ext: Ext<HTMLMetaElement> = {}) = element("meta", deps, ext)
fun DomScope.meter(deps: Deps, ext: Ext<HTMLMeterElement> = {}) = element("meter", deps, ext)
fun DomScope.ins(deps: Deps, ext: Ext<HTMLModElement> = {}) = element("ins", deps, ext)
fun DomScope.del(deps: Deps, ext: Ext<HTMLModElement> = {}) = element("del", deps, ext)
fun DomScope.ol(deps: Deps, ext: Ext<HTMLOListElement> = {}) = element("ol", deps, ext)
fun DomScope.obj(deps: Deps, ext: Ext<HTMLObjectElement> = {}) = element("object", deps, ext)
fun DomScope.optgroup(deps: Deps, ext: Ext<HTMLOptGroupElement> = {}) = element("optgroup", deps, ext)
fun DomScope.option(deps: Deps, ext: Ext<HTMLOptionElement> = {}) = element("option", deps, ext)
fun DomScope.output(deps: Deps, ext: Ext<HTMLOutputElement> = {}) = element("output", deps, ext)
fun DomScope.p(deps: Deps, ext: Ext<HTMLParagraphElement> = {}) = element("p", deps, ext)
fun DomScope.param(deps: Deps, ext: Ext<HTMLParamElement> = {}) = element("param", deps, ext)
fun DomScope.progress(deps: Deps, ext: Ext<HTMLProgressElement> = {}) = element("progress", deps, ext)
fun DomScope.blockquote(deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("blockquote", deps, ext)
fun DomScope.q(deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("q", deps, ext)
fun DomScope.cite(deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("cite", deps, ext)
fun DomScope.select(deps: Deps, ext: Ext<HTMLSelectElement> = {}) = element("select", deps, ext)
fun DomScope.source(deps: Deps, ext: Ext<HTMLSourceElement> = {}) = element("source", deps, ext)
fun DomScope.span(deps: Deps, ext: Ext<HTMLSpanElement> = {}) = element("span", deps, ext)
fun DomScope.caption(deps: Deps, ext: Ext<HTMLTableCaptionElement> = {}) = element("caption", deps, ext)
fun DomScope.th(deps: Deps, ext: Ext<HTMLTableCellElement> = {}) = element("th", deps, ext)
fun DomScope.td(deps: Deps, ext: Ext<HTMLTableCellElement> = {}) = element("td", deps, ext)
fun DomScope.col(deps: Deps, ext: Ext<HTMLTableColElement> = {}) = element("col", deps, ext)
fun DomScope.colgroup(deps: Deps, ext: Ext<HTMLTableColElement> = {}) = element("colgroup", deps, ext)
fun DomScope.tr(deps: Deps, ext: Ext<HTMLTableRowElement> = {}) = element("tr", deps, ext)
fun DomScope.table(deps: Deps, ext: Ext<HTMLTableElement> = {}) = element("table", deps, ext)
fun DomScope.tfoot(deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("tfoot", deps, ext)
fun DomScope.thead(deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("thead", deps, ext)
fun DomScope.tbody(deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("tbody", deps, ext)
fun DomScope.textarea(deps: Deps, ext: Ext<HTMLTextAreaElement> = {}) = element("textarea", deps, ext)
fun DomScope.time(deps: Deps, ext: Ext<HTMLTimeElement> = {}) = element("time", deps, ext)
fun DomScope.title(deps: Deps, ext: Ext<HTMLTitleElement> = {}) = element("title", deps, ext)
fun DomScope.track(deps: Deps, ext: Ext<HTMLTrackElement> = {}) = element("track", deps, ext)
fun DomScope.ul(deps: Deps, ext: Ext<HTMLUListElement> = {}) = element("ul", deps, ext)
fun DomScope.video(deps: Deps, ext: Ext<HTMLVideoElement> = {}) = element("video", deps, ext)

fun DomScope.a(className: String, deps: Deps, ext: Ext<HTMLAnchorElement> = {}) = element("a", className, deps, ext)
fun DomScope.area(className: String, deps: Deps, ext: Ext<HTMLAreaElement> = {}) = element("area", className, deps, ext)
fun DomScope.audio(className: String, deps: Deps, ext: Ext<HTMLAudioElement> = {}) = element("audio", className, deps, ext)
fun DomScope.br(className: String, deps: Deps, ext: Ext<HTMLBRElement> = {}) = element("br", className, deps, ext)
fun DomScope.button(className: String, deps: Deps, ext: Ext<HTMLButtonElement> = {}) = element("button", className, deps, ext)
fun DomScope.canvas(className: String, deps: Deps, ext: Ext<HTMLCanvasElement> = {}) = element("canvas", className, deps, ext)
fun DomScope.dl(className: String, deps: Deps, ext: Ext<HTMLDListElement> = {}) = element("dl", className, deps, ext)
fun DomScope.datalist(className: String, deps: Deps, ext: Ext<HTMLDataListElement> = {}) = element("datalist", className, deps, ext)
fun DomScope.data(className: String, deps: Deps, ext: Ext<HTMLDataElement> = {}) = element("data", className, deps, ext)
fun DomScope.details(className: String, deps: Deps, ext: Ext<HTMLDetailsElement> = {}) = element("details", className, deps, ext)
fun DomScope.div(className: String, deps: Deps, ext: Ext<HTMLDivElement> = {}) = element("div", className, deps, ext)
fun DomScope.embed(className: String, deps: Deps, ext: Ext<HTMLEmbedElement> = {}) = element("embed", className, deps, ext)
fun DomScope.fieldset(className: String, deps: Deps, ext: Ext<HTMLFieldSetElement> = {}) = element("fieldset", className, deps, ext)
fun DomScope.font(className: String, deps: Deps, ext: Ext<HTMLFontElement> = {}) = element("font", className, deps, ext)
fun DomScope.form(className: String, deps: Deps, ext: Ext<HTMLFormElement> = {}) = element("form", className, deps, ext)
fun DomScope.hr(className: String, deps: Deps, ext: Ext<HTMLHRElement> = {}) = element("hr", className, deps, ext)
fun DomScope.h1(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h1", className, deps, ext)
fun DomScope.h2(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h2", className, deps, ext)
fun DomScope.h3(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h3", className, deps, ext)
fun DomScope.h4(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h4", className, deps, ext)
fun DomScope.h5(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h5", className, deps, ext)
fun DomScope.h6(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h6", className, deps, ext)
fun DomScope.iframe(className: String, deps: Deps, ext: Ext<HTMLIFrameElement> = {}) = element("iframe", className, deps, ext)
fun DomScope.img(className: String, deps: Deps, ext: Ext<HTMLImageElement> = {}) = element("img", className, deps, ext)
fun DomScope.input(className: String, deps: Deps, ext: Ext<HTMLInputElement> = {}) = element("input", className, deps, ext)
fun DomScope.li(className: String, deps: Deps, ext: Ext<HTMLLIElement> = {}) = element("li", className, deps, ext)
fun DomScope.label(className: String, deps: Deps, ext: Ext<HTMLLabelElement> = {}) = element("label", className, deps, ext)
fun DomScope.legend(className: String, deps: Deps, ext: Ext<HTMLLegendElement> = {}) = element("legend", className, deps, ext)
fun DomScope.link(className: String, deps: Deps, ext: Ext<HTMLLinkElement> = {}) = element("link", className, deps, ext)
fun DomScope.map(className: String, deps: Deps, ext: Ext<HTMLMapElement> = {}) = element("map", className, deps, ext)
fun DomScope.meta(className: String, deps: Deps, ext: Ext<HTMLMetaElement> = {}) = element("meta", className, deps, ext)
fun DomScope.meter(className: String, deps: Deps, ext: Ext<HTMLMeterElement> = {}) = element("meter", className, deps, ext)
fun DomScope.ins(className: String, deps: Deps, ext: Ext<HTMLModElement> = {}) = element("ins", className, deps, ext)
fun DomScope.del(className: String, deps: Deps, ext: Ext<HTMLModElement> = {}) = element("del", className, deps, ext)
fun DomScope.ol(className: String, deps: Deps, ext: Ext<HTMLOListElement> = {}) = element("ol", className, deps, ext)
fun DomScope.obj(className: String, deps: Deps, ext: Ext<HTMLObjectElement> = {}) = element("object", className, deps, ext)
fun DomScope.optgroup(className: String, deps: Deps, ext: Ext<HTMLOptGroupElement> = {}) = element("optgroup", className, deps, ext)
fun DomScope.option(className: String, deps: Deps, ext: Ext<HTMLOptionElement> = {}) = element("option", className, deps, ext)
fun DomScope.output(className: String, deps: Deps, ext: Ext<HTMLOutputElement> = {}) = element("output", className, deps, ext)
fun DomScope.p(className: String, deps: Deps, ext: Ext<HTMLParagraphElement> = {}) = element("p", className, deps, ext)
fun DomScope.param(className: String, deps: Deps, ext: Ext<HTMLParamElement> = {}) = element("param", className, deps, ext)
fun DomScope.progress(className: String, deps: Deps, ext: Ext<HTMLProgressElement> = {}) = element("progress", className, deps, ext)
fun DomScope.blockquote(className: String, deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("blockquote", className, deps, ext)
fun DomScope.q(className: String, deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("q", className, deps, ext)
fun DomScope.cite(className: String, deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("cite", className, deps, ext)
fun DomScope.select(className: String, deps: Deps, ext: Ext<HTMLSelectElement> = {}) = element("select", className, deps, ext)
fun DomScope.source(className: String, deps: Deps, ext: Ext<HTMLSourceElement> = {}) = element("source", className, deps, ext)
fun DomScope.span(className: String, deps: Deps, ext: Ext<HTMLSpanElement> = {}) = element("span", className, deps, ext)
fun DomScope.caption(className: String, deps: Deps, ext: Ext<HTMLTableCaptionElement> = {}) = element("caption", className, deps, ext)
fun DomScope.th(className: String, deps: Deps, ext: Ext<HTMLTableCellElement> = {}) = element("th", className, deps, ext)
fun DomScope.td(className: String, deps: Deps, ext: Ext<HTMLTableCellElement> = {}) = element("td", className, deps, ext)
fun DomScope.col(className: String, deps: Deps, ext: Ext<HTMLTableColElement> = {}) = element("col", className, deps, ext)
fun DomScope.colgroup(className: String, deps: Deps, ext: Ext<HTMLTableColElement> = {}) = element("colgroup", className, deps, ext)
fun DomScope.tr(className: String, deps: Deps, ext: Ext<HTMLTableRowElement> = {}) = element("tr", className, deps, ext)
fun DomScope.table(className: String, deps: Deps, ext: Ext<HTMLTableElement> = {}) = element("table", className, deps, ext)
fun DomScope.tfoot(className: String, deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("tfoot", className, deps, ext)
fun DomScope.thead(className: String, deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("thead", className, deps, ext)
fun DomScope.tbody(className: String, deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("tbody", className, deps, ext)
fun DomScope.textarea(className: String, deps: Deps, ext: Ext<HTMLTextAreaElement> = {}) = element("textarea", className, deps, ext)
fun DomScope.time(className: String, deps: Deps, ext: Ext<HTMLTimeElement> = {}) = element("time", className, deps, ext)
fun DomScope.title(className: String, deps: Deps, ext: Ext<HTMLTitleElement> = {}) = element("title", className, deps, ext)
fun DomScope.track(className: String, deps: Deps, ext: Ext<HTMLTrackElement> = {}) = element("track", className, deps, ext)
fun DomScope.ul(className: String, deps: Deps, ext: Ext<HTMLUListElement> = {}) = element("ul", className, deps, ext)
fun DomScope.video(className: String, deps: Deps, ext: Ext<HTMLVideoElement> = {}) = element("video", className, deps, ext)