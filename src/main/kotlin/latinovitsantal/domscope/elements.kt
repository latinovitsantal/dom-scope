package latinovitsantal.domscope

import org.w3c.dom.*

fun DomScope.a(className: String? = null, ext: Ext<HTMLAnchorElement> = {}) = element("a", className, ext)
fun DomScope.area(className: String? = null, ext: Ext<HTMLAreaElement> = {}) = element("area", className, ext)
fun DomScope.audio(className: String? = null, ext: Ext<HTMLAudioElement> = {}) = element("audio", className, ext)
fun DomScope.br(className: String? = null, ext: Ext<HTMLBRElement> = {}) = element("br", className, ext)
fun DomScope.button(className: String? = null, ext: Ext<HTMLButtonElement> = {}) = element("button", className, ext)
fun DomScope.canvas(className: String? = null, ext: Ext<HTMLCanvasElement> = {}) = element("canvas", className, ext)
fun DomScope.dl(className: String? = null, ext: Ext<HTMLDListElement> = {}) = element("dl", className, ext)
fun DomScope.datalist(className: String? = null, ext: Ext<HTMLDataListElement> = {}) = element("datalist", className, ext)
fun DomScope.data(className: String? = null, ext: Ext<HTMLDataElement> = {}) = element("data", className, ext)
fun DomScope.details(className: String? = null, ext: Ext<HTMLDetailsElement> = {}) = element("details", className, ext)
fun DomScope.div(className: String? = null, ext: Ext<HTMLDivElement> = {}) = element("div", className, ext)
fun DomScope.embed(className: String? = null, ext: Ext<HTMLEmbedElement> = {}) = element("embed", className, ext)
fun DomScope.fieldset(className: String? = null, ext: Ext<HTMLFieldSetElement> = {}) = element("fieldset", className, ext)
fun DomScope.font(className: String? = null, ext: Ext<HTMLFontElement> = {}) = element("font", className, ext)
fun DomScope.form(className: String? = null, ext: Ext<HTMLFormElement> = {}) = element("form", className, ext)
fun DomScope.hr(className: String? = null, ext: Ext<HTMLHRElement> = {}) = element("hr", className, ext)
fun DomScope.h1(className: String? = null, ext: Ext<HTMLHeadingElement> = {}) = element("h1", className, ext)
fun DomScope.h2(className: String? = null, ext: Ext<HTMLHeadingElement> = {}) = element("h2", className, ext)
fun DomScope.h3(className: String? = null, ext: Ext<HTMLHeadingElement> = {}) = element("h3", className, ext)
fun DomScope.h4(className: String? = null, ext: Ext<HTMLHeadingElement> = {}) = element("h4", className, ext)
fun DomScope.h5(className: String? = null, ext: Ext<HTMLHeadingElement> = {}) = element("h5", className, ext)
fun DomScope.h6(className: String? = null, ext: Ext<HTMLHeadingElement> = {}) = element("h6", className, ext)
fun DomScope.iframe(className: String? = null, ext: Ext<HTMLIFrameElement> = {}) = element("iframe", className, ext)
fun DomScope.img(className: String? = null, ext: Ext<HTMLImageElement> = {}) = element("img", className, ext)
fun DomScope.input(className: String? = null, ext: Ext<HTMLInputElement> = {}) = element("input", className, ext)
fun DomScope.li(className: String? = null, ext: Ext<HTMLLIElement> = {}) = element("li", className, ext)
fun DomScope.label(className: String? = null, ext: Ext<HTMLLabelElement> = {}) = element("label", className, ext)
fun DomScope.legend(className: String? = null, ext: Ext<HTMLLegendElement> = {}) = element("legend", className, ext)
fun DomScope.link(className: String? = null, ext: Ext<HTMLLinkElement> = {}) = element("link", className, ext)
fun DomScope.map(className: String? = null, ext: Ext<HTMLMapElement> = {}) = element("map", className, ext)
fun DomScope.meta(className: String? = null, ext: Ext<HTMLMetaElement> = {}) = element("meta", className, ext)
fun DomScope.meter(className: String? = null, ext: Ext<HTMLMeterElement> = {}) = element("meter", className, ext)
fun DomScope.ins(className: String? = null, ext: Ext<HTMLModElement> = {}) = element("ins", className, ext)
fun DomScope.del(className: String? = null, ext: Ext<HTMLModElement> = {}) = element("del", className, ext)
fun DomScope.ol(className: String? = null, ext: Ext<HTMLOListElement> = {}) = element("ol", className, ext)
fun DomScope.obj(className: String? = null, ext: Ext<HTMLObjectElement> = {}) = element("object", className, ext)
fun DomScope.optgroup(className: String? = null, ext: Ext<HTMLOptGroupElement> = {}) = element("optgroup", className, ext)
fun DomScope.option(className: String? = null, ext: Ext<HTMLOptionElement> = {}) = element("option", className, ext)
fun DomScope.output(className: String? = null, ext: Ext<HTMLOutputElement> = {}) = element("output", className, ext)
fun DomScope.p(className: String? = null, ext: Ext<HTMLParagraphElement> = {}) = element("p", className, ext)
fun DomScope.param(className: String? = null, ext: Ext<HTMLParamElement> = {}) = element("param", className, ext)
fun DomScope.progress(className: String? = null, ext: Ext<HTMLProgressElement> = {}) = element("progress", className, ext)
fun DomScope.blockquote(className: String? = null, ext: Ext<HTMLQuoteElement> = {}) = element("blockquote", className, ext)
fun DomScope.q(className: String? = null, ext: Ext<HTMLQuoteElement> = {}) = element("q", className, ext)
fun DomScope.cite(className: String? = null, ext: Ext<HTMLQuoteElement> = {}) = element("cite", className, ext)
fun DomScope.select(className: String? = null, ext: Ext<HTMLSelectElement> = {}) = element("select", className, ext)
fun DomScope.source(className: String? = null, ext: Ext<HTMLSourceElement> = {}) = element("source", className, ext)
fun DomScope.span(className: String? = null, ext: Ext<HTMLSpanElement> = {}) = element("span", className, ext)
fun DomScope.caption(className: String? = null, ext: Ext<HTMLTableCaptionElement> = {}) = element("caption", className, ext)
fun DomScope.th(className: String? = null, ext: Ext<HTMLTableCellElement> = {}) = element("th", className, ext)
fun DomScope.td(className: String? = null, ext: Ext<HTMLTableCellElement> = {}) = element("td", className, ext)
fun DomScope.col(className: String? = null, ext: Ext<HTMLTableColElement> = {}) = element("col", className, ext)
fun DomScope.colgroup(className: String? = null, ext: Ext<HTMLTableColElement> = {}) = element("colgroup", className, ext)
fun DomScope.tr(className: String? = null, ext: Ext<HTMLTableRowElement> = {}) = element("tr", className, ext)
fun DomScope.table(className: String? = null, ext: Ext<HTMLTableElement> = {}) = element("table", className, ext)
fun DomScope.tfoot(className: String? = null, ext: Ext<HTMLTableSectionElement> = {}) = element("tfoot", className, ext)
fun DomScope.thead(className: String? = null, ext: Ext<HTMLTableSectionElement> = {}) = element("thead", className, ext)
fun DomScope.tbody(className: String? = null, ext: Ext<HTMLTableSectionElement> = {}) = element("tbody", className, ext)
fun DomScope.textarea(className: String? = null, ext: Ext<HTMLTextAreaElement> = {}) = element("textarea", className, ext)
fun DomScope.time(className: String? = null, ext: Ext<HTMLTimeElement> = {}) = element("time", className, ext)
fun DomScope.title(className: String? = null, ext: Ext<HTMLTitleElement> = {}) = element("title", className, ext)
fun DomScope.track(className: String? = null, ext: Ext<HTMLTrackElement> = {}) = element("track", className, ext)
fun DomScope.ul(className: String? = null, ext: Ext<HTMLUListElement> = {}) = element("ul", className, ext)
fun DomScope.video(className: String? = null, ext: Ext<HTMLVideoElement> = {}) = element("video", className, ext)

fun DomScope.a(deps: Deps, ext: Ext<HTMLAnchorElement> = {}) = element("a", deps, null, ext)
fun DomScope.area(deps: Deps, ext: Ext<HTMLAreaElement> = {}) = element("area", deps, null, ext)
fun DomScope.audio(deps: Deps, ext: Ext<HTMLAudioElement> = {}) = element("audio", deps, null, ext)
fun DomScope.br(deps: Deps, ext: Ext<HTMLBRElement> = {}) = element("br", deps, null, ext)
fun DomScope.button(deps: Deps, ext: Ext<HTMLButtonElement> = {}) = element("button", deps, null, ext)
fun DomScope.canvas(deps: Deps, ext: Ext<HTMLCanvasElement> = {}) = element("canvas", deps, null, ext)
fun DomScope.dl(deps: Deps, ext: Ext<HTMLDListElement> = {}) = element("dl", deps, null, ext)
fun DomScope.datalist(deps: Deps, ext: Ext<HTMLDataListElement> = {}) = element("datalist", deps, null, ext)
fun DomScope.data(deps: Deps, ext: Ext<HTMLDataElement> = {}) = element("data", deps, null, ext)
fun DomScope.details(deps: Deps, ext: Ext<HTMLDetailsElement> = {}) = element("details", deps, null, ext)
fun DomScope.div(deps: Deps, ext: Ext<HTMLDivElement> = {}) = element("div", deps, null, ext)
fun DomScope.embed(deps: Deps, ext: Ext<HTMLEmbedElement> = {}) = element("embed", deps, null, ext)
fun DomScope.fieldset(deps: Deps, ext: Ext<HTMLFieldSetElement> = {}) = element("fieldset", deps, null, ext)
fun DomScope.font(deps: Deps, ext: Ext<HTMLFontElement> = {}) = element("font", deps, null, ext)
fun DomScope.form(deps: Deps, ext: Ext<HTMLFormElement> = {}) = element("form", deps, null, ext)
fun DomScope.hr(deps: Deps, ext: Ext<HTMLHRElement> = {}) = element("hr", deps, null, ext)
fun DomScope.h1(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h1", deps, null, ext)
fun DomScope.h2(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h2", deps, null, ext)
fun DomScope.h3(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h3", deps, null, ext)
fun DomScope.h4(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h4", deps, null, ext)
fun DomScope.h5(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h5", deps, null, ext)
fun DomScope.h6(deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h6", deps, null, ext)
fun DomScope.iframe(deps: Deps, ext: Ext<HTMLIFrameElement> = {}) = element("iframe", deps, null, ext)
fun DomScope.img(deps: Deps, ext: Ext<HTMLImageElement> = {}) = element("img", deps, null, ext)
fun DomScope.input(deps: Deps, ext: Ext<HTMLInputElement> = {}) = element("input", deps, null, ext)
fun DomScope.li(deps: Deps, ext: Ext<HTMLLIElement> = {}) = element("li", deps, null, ext)
fun DomScope.label(deps: Deps, ext: Ext<HTMLLabelElement> = {}) = element("label", deps, null, ext)
fun DomScope.legend(deps: Deps, ext: Ext<HTMLLegendElement> = {}) = element("legend", deps, null, ext)
fun DomScope.link(deps: Deps, ext: Ext<HTMLLinkElement> = {}) = element("link", deps, null, ext)
fun DomScope.map(deps: Deps, ext: Ext<HTMLMapElement> = {}) = element("map", deps, null, ext)
fun DomScope.meta(deps: Deps, ext: Ext<HTMLMetaElement> = {}) = element("meta", deps, null, ext)
fun DomScope.meter(deps: Deps, ext: Ext<HTMLMeterElement> = {}) = element("meter", deps, null, ext)
fun DomScope.ins(deps: Deps, ext: Ext<HTMLModElement> = {}) = element("ins", deps, null, ext)
fun DomScope.del(deps: Deps, ext: Ext<HTMLModElement> = {}) = element("del", deps, null, ext)
fun DomScope.ol(deps: Deps, ext: Ext<HTMLOListElement> = {}) = element("ol", deps, null, ext)
fun DomScope.obj(deps: Deps, ext: Ext<HTMLObjectElement> = {}) = element("object", deps, null, ext)
fun DomScope.optgroup(deps: Deps, ext: Ext<HTMLOptGroupElement> = {}) = element("optgroup", deps, null, ext)
fun DomScope.option(deps: Deps, ext: Ext<HTMLOptionElement> = {}) = element("option", deps, null, ext)
fun DomScope.output(deps: Deps, ext: Ext<HTMLOutputElement> = {}) = element("output", deps, null, ext)
fun DomScope.p(deps: Deps, ext: Ext<HTMLParagraphElement> = {}) = element("p", deps, null, ext)
fun DomScope.param(deps: Deps, ext: Ext<HTMLParamElement> = {}) = element("param", deps, null, ext)
fun DomScope.progress(deps: Deps, ext: Ext<HTMLProgressElement> = {}) = element("progress", deps, null, ext)
fun DomScope.blockquote(deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("blockquote", deps, null, ext)
fun DomScope.q(deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("q", deps, null, ext)
fun DomScope.cite(deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("cite", deps, null, ext)
fun DomScope.select(deps: Deps, ext: Ext<HTMLSelectElement> = {}) = element("select", deps, null, ext)
fun DomScope.source(deps: Deps, ext: Ext<HTMLSourceElement> = {}) = element("source", deps, null, ext)
fun DomScope.span(deps: Deps, ext: Ext<HTMLSpanElement> = {}) = element("span", deps, null, ext)
fun DomScope.caption(deps: Deps, ext: Ext<HTMLTableCaptionElement> = {}) = element("caption", deps, null, ext)
fun DomScope.th(deps: Deps, ext: Ext<HTMLTableCellElement> = {}) = element("th", deps, null, ext)
fun DomScope.td(deps: Deps, ext: Ext<HTMLTableCellElement> = {}) = element("td", deps, null, ext)
fun DomScope.col(deps: Deps, ext: Ext<HTMLTableColElement> = {}) = element("col", deps, null, ext)
fun DomScope.colgroup(deps: Deps, ext: Ext<HTMLTableColElement> = {}) = element("colgroup", deps, null, ext)
fun DomScope.tr(deps: Deps, ext: Ext<HTMLTableRowElement> = {}) = element("tr", deps, null, ext)
fun DomScope.table(deps: Deps, ext: Ext<HTMLTableElement> = {}) = element("table", deps, null, ext)
fun DomScope.tfoot(deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("tfoot", deps, null, ext)
fun DomScope.thead(deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("thead", deps, null, ext)
fun DomScope.tbody(deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("tbody", deps, null, ext)
fun DomScope.textarea(deps: Deps, ext: Ext<HTMLTextAreaElement> = {}) = element("textarea", deps, null, ext)
fun DomScope.time(deps: Deps, ext: Ext<HTMLTimeElement> = {}) = element("time", deps, null, ext)
fun DomScope.title(deps: Deps, ext: Ext<HTMLTitleElement> = {}) = element("title", deps, null, ext)
fun DomScope.track(deps: Deps, ext: Ext<HTMLTrackElement> = {}) = element("track", deps, null, ext)
fun DomScope.ul(deps: Deps, ext: Ext<HTMLUListElement> = {}) = element("ul", deps, null, ext)
fun DomScope.video(deps: Deps, ext: Ext<HTMLVideoElement> = {}) = element("video", deps, null, ext)

fun DomScope.a(className: String, deps: Deps, ext: Ext<HTMLAnchorElement> = {}) = element("a", deps, className, ext)
fun DomScope.area(className: String, deps: Deps, ext: Ext<HTMLAreaElement> = {}) = element("area", deps, className, ext)
fun DomScope.audio(className: String, deps: Deps, ext: Ext<HTMLAudioElement> = {}) = element("audio", deps, className, ext)
fun DomScope.br(className: String, deps: Deps, ext: Ext<HTMLBRElement> = {}) = element("br", deps, className, ext)
fun DomScope.button(className: String, deps: Deps, ext: Ext<HTMLButtonElement> = {}) = element("button", deps, className, ext)
fun DomScope.canvas(className: String, deps: Deps, ext: Ext<HTMLCanvasElement> = {}) = element("canvas", deps, className, ext)
fun DomScope.dl(className: String, deps: Deps, ext: Ext<HTMLDListElement> = {}) = element("dl", deps, className, ext)
fun DomScope.datalist(className: String, deps: Deps, ext: Ext<HTMLDataListElement> = {}) = element("datalist", deps, className, ext)
fun DomScope.data(className: String, deps: Deps, ext: Ext<HTMLDataElement> = {}) = element("data", deps, className, ext)
fun DomScope.details(className: String, deps: Deps, ext: Ext<HTMLDetailsElement> = {}) = element("details", deps, className, ext)
fun DomScope.div(className: String, deps: Deps, ext: Ext<HTMLDivElement> = {}) = element("div", deps, className, ext)
fun DomScope.embed(className: String, deps: Deps, ext: Ext<HTMLEmbedElement> = {}) = element("embed", deps, className, ext)
fun DomScope.fieldset(className: String, deps: Deps, ext: Ext<HTMLFieldSetElement> = {}) = element("fieldset", deps, className, ext)
fun DomScope.font(className: String, deps: Deps, ext: Ext<HTMLFontElement> = {}) = element("font", deps, className, ext)
fun DomScope.form(className: String, deps: Deps, ext: Ext<HTMLFormElement> = {}) = element("form", deps, className, ext)
fun DomScope.hr(className: String, deps: Deps, ext: Ext<HTMLHRElement> = {}) = element("hr", deps, className, ext)
fun DomScope.h1(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h1", deps, className, ext)
fun DomScope.h2(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h2", deps, className, ext)
fun DomScope.h3(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h3", deps, className, ext)
fun DomScope.h4(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h4", deps, className, ext)
fun DomScope.h5(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h5", deps, className, ext)
fun DomScope.h6(className: String, deps: Deps, ext: Ext<HTMLHeadingElement> = {}) = element("h6", deps, className, ext)
fun DomScope.iframe(className: String, deps: Deps, ext: Ext<HTMLIFrameElement> = {}) = element("iframe", deps, className, ext)
fun DomScope.img(className: String, deps: Deps, ext: Ext<HTMLImageElement> = {}) = element("img", deps, className, ext)
fun DomScope.input(className: String, deps: Deps, ext: Ext<HTMLInputElement> = {}) = element("input", deps, className, ext)
fun DomScope.li(className: String, deps: Deps, ext: Ext<HTMLLIElement> = {}) = element("li", deps, className, ext)
fun DomScope.label(className: String, deps: Deps, ext: Ext<HTMLLabelElement> = {}) = element("label", deps, className, ext)
fun DomScope.legend(className: String, deps: Deps, ext: Ext<HTMLLegendElement> = {}) = element("legend", deps, className, ext)
fun DomScope.link(className: String, deps: Deps, ext: Ext<HTMLLinkElement> = {}) = element("link", deps, className, ext)
fun DomScope.map(className: String, deps: Deps, ext: Ext<HTMLMapElement> = {}) = element("map", deps, className, ext)
fun DomScope.meta(className: String, deps: Deps, ext: Ext<HTMLMetaElement> = {}) = element("meta", deps, className, ext)
fun DomScope.meter(className: String, deps: Deps, ext: Ext<HTMLMeterElement> = {}) = element("meter", deps, className, ext)
fun DomScope.ins(className: String, deps: Deps, ext: Ext<HTMLModElement> = {}) = element("ins", deps, className, ext)
fun DomScope.del(className: String, deps: Deps, ext: Ext<HTMLModElement> = {}) = element("del", deps, className, ext)
fun DomScope.ol(className: String, deps: Deps, ext: Ext<HTMLOListElement> = {}) = element("ol", deps, className, ext)
fun DomScope.obj(className: String, deps: Deps, ext: Ext<HTMLObjectElement> = {}) = element("object", deps, className, ext)
fun DomScope.optgroup(className: String, deps: Deps, ext: Ext<HTMLOptGroupElement> = {}) = element("optgroup", deps, className, ext)
fun DomScope.option(className: String, deps: Deps, ext: Ext<HTMLOptionElement> = {}) = element("option", deps, className, ext)
fun DomScope.output(className: String, deps: Deps, ext: Ext<HTMLOutputElement> = {}) = element("output", deps, className, ext)
fun DomScope.p(className: String, deps: Deps, ext: Ext<HTMLParagraphElement> = {}) = element("p", deps, className, ext)
fun DomScope.param(className: String, deps: Deps, ext: Ext<HTMLParamElement> = {}) = element("param", deps, className, ext)
fun DomScope.progress(className: String, deps: Deps, ext: Ext<HTMLProgressElement> = {}) = element("progress", deps, className, ext)
fun DomScope.blockquote(className: String, deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("blockquote", deps, className, ext)
fun DomScope.q(className: String, deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("q", deps, className, ext)
fun DomScope.cite(className: String, deps: Deps, ext: Ext<HTMLQuoteElement> = {}) = element("cite", deps, className, ext)
fun DomScope.select(className: String, deps: Deps, ext: Ext<HTMLSelectElement> = {}) = element("select", deps, className, ext)
fun DomScope.source(className: String, deps: Deps, ext: Ext<HTMLSourceElement> = {}) = element("source", deps, className, ext)
fun DomScope.span(className: String, deps: Deps, ext: Ext<HTMLSpanElement> = {}) = element("span", deps, className, ext)
fun DomScope.caption(className: String, deps: Deps, ext: Ext<HTMLTableCaptionElement> = {}) = element("caption", deps, className, ext)
fun DomScope.th(className: String, deps: Deps, ext: Ext<HTMLTableCellElement> = {}) = element("th", deps, className, ext)
fun DomScope.td(className: String, deps: Deps, ext: Ext<HTMLTableCellElement> = {}) = element("td", deps, className, ext)
fun DomScope.col(className: String, deps: Deps, ext: Ext<HTMLTableColElement> = {}) = element("col", deps, className, ext)
fun DomScope.colgroup(className: String, deps: Deps, ext: Ext<HTMLTableColElement> = {}) = element("colgroup", deps, className, ext)
fun DomScope.tr(className: String, deps: Deps, ext: Ext<HTMLTableRowElement> = {}) = element("tr", deps, className, ext)
fun DomScope.table(className: String, deps: Deps, ext: Ext<HTMLTableElement> = {}) = element("table", deps, className, ext)
fun DomScope.tfoot(className: String, deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("tfoot", deps, className, ext)
fun DomScope.thead(className: String, deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("thead", deps, className, ext)
fun DomScope.tbody(className: String, deps: Deps, ext: Ext<HTMLTableSectionElement> = {}) = element("tbody", deps, className, ext)
fun DomScope.textarea(className: String, deps: Deps, ext: Ext<HTMLTextAreaElement> = {}) = element("textarea", deps, className, ext)
fun DomScope.time(className: String, deps: Deps, ext: Ext<HTMLTimeElement> = {}) = element("time", deps, className, ext)
fun DomScope.title(className: String, deps: Deps, ext: Ext<HTMLTitleElement> = {}) = element("title", deps, className, ext)
fun DomScope.track(className: String, deps: Deps, ext: Ext<HTMLTrackElement> = {}) = element("track", deps, className, ext)
fun DomScope.ul(className: String, deps: Deps, ext: Ext<HTMLUListElement> = {}) = element("ul", deps, className, ext)
fun DomScope.video(className: String, deps: Deps, ext: Ext<HTMLVideoElement> = {}) = element("video", deps, className, ext)